"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getInternal = exports.normalizeHttpResponse = exports.jsonSafeParse = exports.omit = exports.isContainerEmpty = exports.isPlainObject = exports.portIsOccupied = void 0;
var portIsOccupied_1 = require("./portIsOccupied");
Object.defineProperty(exports, "portIsOccupied", { enumerable: true, get: function () { return __importDefault(portIsOccupied_1).default; } });
var isPlainObject = function (value) {
    return Object.prototype.toString.call(value) === '[object Object]';
};
exports.isPlainObject = isPlainObject;
var isContainerEmpty = function (value) {
    if (exports.isPlainObject(value)) {
        return Object.keys(value).length === 0;
    }
    else if (Array.isArray(value)) {
        return value.length === 0;
    }
    return true;
};
exports.isContainerEmpty = isContainerEmpty;
var omit = function (value, list) {
    var newObject = {};
    if (!exports.isPlainObject(value))
        return newObject;
    Object.keys(value)
        .filter(function (item) { return !list.includes(item); })
        .map(function (key) {
        newObject[key] = value[key];
    });
    return newObject;
};
exports.omit = omit;
var jsonSafeParse = function (string, reviver) {
    if (typeof string !== 'string')
        return string;
    var firstChar = string[0];
    if (firstChar !== '{' && firstChar !== '[' && firstChar !== '"')
        return string;
    try {
        return JSON.parse(string, reviver);
    }
    catch (e) { }
    return string;
};
exports.jsonSafeParse = jsonSafeParse;
var normalizeHttpResponse = function (response) {
    var _a;
    // May require updating to catch other types
    if (response === undefined) {
        response = {};
    }
    else if (Array.isArray(response) || typeof response !== 'object' || response === null) {
        response = { body: response };
    }
    response.headers = (_a = response === null || response === void 0 ? void 0 : response.headers) !== null && _a !== void 0 ? _a : {};
    return response;
};
exports.normalizeHttpResponse = normalizeHttpResponse;
/**
 *
 * @param variables
 * @param request
 * 基本用法:
 *  const getInternalRequest = {
  internal: {
    boolean: true,
    number: 1,
    string: 'string',
    array: [],
    object: {
      key: 'value'
    },
  }
  getInternal(
    ['array', 'object'],
    getInternalRequest
  ) => { array: [],object: {key: 'value'} }
 */
var getInternal = function (variables, request) { return __awaiter(void 0, void 0, void 0, function () {
    var keys, values, promises, _loop_1, _i, values_1, internalKey, errors;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                if (!variables)
                    return [2 /*return*/, {}];
                keys = [];
                values = [];
                if (variables === true) {
                    keys = values = Object.keys(request.internal);
                }
                else if (typeof variables === 'string') {
                    keys = values = [variables];
                }
                else if (Array.isArray(variables)) {
                    keys = values = variables;
                }
                else if (typeof variables === 'object') {
                    keys = Object.keys(variables);
                    values = Object.values(variables);
                }
                promises = [];
                _loop_1 = function (internalKey) {
                    // 'internal.key.sub_value' -> { [key]: internal.key.sub_value }
                    var pathOptionKey = internalKey.split('.');
                    var rootOptionKey = pathOptionKey.shift();
                    var valuePromise = request.internal[rootOptionKey];
                    if (typeof (valuePromise === null || valuePromise === void 0 ? void 0 : valuePromise.then) !== 'function') {
                        valuePromise = Promise.resolve(valuePromise);
                    }
                    promises.push(valuePromise.then(function (value) { return pathOptionKey.reduce(function (p, c) { return p === null || p === void 0 ? void 0 : p[c]; }, value); }));
                };
                for (_i = 0, values_1 = values; _i < values_1.length; _i++) {
                    internalKey = values_1[_i];
                    _loop_1(internalKey);
                }
                return [4 /*yield*/, Promise.allSettled(promises)];
            case 1:
                // ensure promise has resolved by the time it's needed
                // If one of the promises throws it will bubble up to @dk/core
                // @ts-ignore
                values = _a.sent();
                errors = values.filter(function (res) { return res.status === 'rejected'; }).map(function (res) { return res.reason.message; });
                if (errors.length)
                    throw new Error(JSON.stringify(errors));
                return [2 /*return*/, keys.reduce(function (obj, key, index) {
                        var _a;
                        return (__assign(__assign({}, obj), (_a = {}, _a[sanitizeKey(key)] = values[index].value, _a)));
                    }, {})];
        }
    });
}); };
exports.getInternal = getInternal;
var sanitizeKeyPrefixLeadingNumber = /^([0-9])/;
var sanitizeKeyRemoveDisallowedChar = /[^a-zA-Z0-9]+/g;
var sanitizeKey = function (key) {
    return key
        .replace(sanitizeKeyPrefixLeadingNumber, '_$1')
        .replace(sanitizeKeyRemoveDisallowedChar, '_');
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxtREFBNkQ7QUFBcEQsaUlBQUEsT0FBTyxPQUFrQjtBQUUzQixJQUFNLGFBQWEsR0FBRyxVQUFDLEtBQWE7SUFDekMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssaUJBQWlCLENBQUM7QUFDckUsQ0FBQyxDQUFDO0FBRlcsUUFBQSxhQUFhLGlCQUV4QjtBQUVLLElBQU0sZ0JBQWdCLEdBQUcsVUFBQyxLQUFVO0lBQ3pDLElBQUkscUJBQWEsQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUN4QixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQztLQUN4QztTQUFNLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUMvQixPQUFPLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDO0tBQzNCO0lBQ0QsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDLENBQUM7QUFQVyxRQUFBLGdCQUFnQixvQkFPM0I7QUFFSyxJQUFNLElBQUksR0FBRyxVQUFDLEtBQWEsRUFBRSxJQUFjO0lBQ2hELElBQU0sU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUNyQixJQUFJLENBQUMscUJBQWEsQ0FBQyxLQUFLLENBQUM7UUFBRSxPQUFPLFNBQVMsQ0FBQztJQUM1QyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztTQUNmLE1BQU0sQ0FBQyxVQUFDLElBQUksSUFBSyxPQUFBLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBcEIsQ0FBb0IsQ0FBQztTQUN0QyxHQUFHLENBQUMsVUFBQyxH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