'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
/**
 * Module dependencies.
 * @private
 */
var Cookies = require('../cookies');
var storeFn = require('../store');
/**
 * Module exports.
 * @public
 */
module.exports = cookieSession;
/**
 * Create a new cookie session middleware.
 *
 * @param {object} [options]
 * @param {boolean} [options.httpOnly=true]
 * @param {array} [options.keys]
 * @param {string} [options.name=session] Name of the cookie to use
 * @param {boolean} [options.overwrite=true]
 * @param {string} [options.secret]
 * @param {boolean} [options.signed=true]
 * @return {function} middleware
 * @public
 */
var storeSess;
function cookieSession(options) {
    var opts = options || {};
    // cookie name
    var name = opts.name || 'session';
    var store = opts.store;
    // secrets
    var keys = opts.keys;
    if (!keys && opts.secret)
        keys = [opts.secret];
    // defaults
    if (opts.overwrite == null)
        opts.overwrite = true;
    if (opts.httpOnly == null)
        opts.httpOnly = true;
    if (opts.signed == null)
        opts.signed = true;
    if (!keys && opts.signed)
        throw new Error('.keys required.');
    return function _cookieSession(request) {
        return __awaiter(this, void 0, void 0, function () {
            function getSession() {
                // already retrieved
                setHeaders();
                if (sess) {
                    return sess;
                }
                if (storeSess && cookies.get(name, opts)) {
                    sess = storeSess;
                    return storeSess;
                }
                // unset
                if (sess === false) {
                    return null;
                }
                // get session
                if ((sess = tryGetSession(cookies, name, req.sessionOptions))) {
                    if (store) {
                        put(sess);
                        update();
                    }
                    return sess;
                }
                // create session
                return (sess = Session.create({}));
            }
            function setSession(val) {
                if (val == null) {
                    // unset session
                    sess = false;
                    if (store) {
                        remove();
                    }
                    setHeaders();
                    return val;
                }
                if (typeof val === 'object') {
                    // create a new session
                    sess = Session.create(val);
                    if (store) {
                        put(sess);
                    }
                    setHeaders();
                    return sess;
                }
                throw new Error('req.session can only be set as null or an object.');
            }
            function setHeaders() {
                if (sess === undefined) {
                    // not accessed
                    return;
                }
                try {
                    if (sess === false) {
                        // remove
                        cookies.set(name, '', req.sessionOptions);
                    }
                    else if ((!sess.isNew || sess.isPopulated) && sess.isChanged) {
                        // save populated or non-new changed session
                        cookies.set(name, Session.serialize(sess), req.sessionOptions);
                    }
                }
                catch (e) {
                }
            }
            var req, res, context, _a, init, put, get, update, remove, cookies, sess, data, obj_1;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        req = request.req, res = request.res, context = request.context;
                        _a = storeFn(opts, context), init = _a.init, put = _a.put, get = _a.get, update = _a.update, remove = _a.remove;
                        cookies = new Cookies(req, res, {
                            keys: keys,
                        });
                        // for overriding
                        req.sessionOptions = Object.create(opts);
                        // define req.session getter / setter
                        Object.defineProperty(req, 'session', {
                            configurable: true,
                            enumerable: true,
                            get: function () { return getSession(); },
                            set: function (val) { return setSession(val); },
                        });
                        if (!store) return [3 /*break*/, 3];
                        return [4 /*yield*/, init()];
                    case 1:
                        _b.sent();
                        return [4 /*yield*/, get()];
                    case 2:
                        data = _b.sent();
                        if (data && data.row && data.row.attributes) {
                            obj_1 = {};
                            data.row.attributes.forEach(function (v) {
                                obj_1[v.columnName] = v.columnValue;
                            });
                            storeSess = obj_1;
                        }
                        _b.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
}
/**
 * Session model.
 *
 * @param {Context} ctx
 * @param {Object} obj
 * @private
 */
function Session(ctx, obj) {
    Object.defineProperty(this, '_ctx', {
        value: ctx,
    });
    if (obj) {
        for (var key in obj) {
            this[key] = obj[key];
        }
    }
}
/**
 * Create new session.
 * @private
 */
Session.create = function create(obj) {
    var ctx = new SessionContext();
    return new Session(ctx, obj);
};
/**
 * Create session from serialized form.
 * @private
 */
Session.deserialize = function deserialize(str) {
    var ctx = new SessionContext();
    var obj = decode(str);
    ctx._new = false;
    ctx._val = str;
    return new Session(ctx, obj);
};
/**
 * Serialize a session to a string.
 * @private
 */
Session.serialize = function serialize(sess) {
    return encode(sess);
};
/**
 * Return if the session is changed for this request.
 *
 * @return {Boolean}
 * @public
 */
Object.defineProperty(Session.prototype, 'isChanged', {
    get: function getIsChanged() {
        return this._ctx._new || this._ctx._val !== Session.serialize(this);
    },
});
/**
 * Return if the session is new for this request.
 *
 * @return {Boolean}
 * @public
 */
Object.defineProperty(Session.prototype, 'isNew', {
    get: function getIsNew() {
        return this._ctx._new;
    },
});
/**
 * populated flag, which is just a boolean alias of .length.
 *
 * @return {Boolean}
 * @public
 */
Object.defineProperty(Session.prototype, 'isPopulated', {
    get: function getIsPopulated() {
        return Object.keys(this).length > 0;
    },
});
/**
 * Session context to store metadata.
 *
 * @private
 */
function SessionContext() {
    this._new = true;
    this._val = undefined;
}
/**
 * Decode the base64 cookie value to an object.
 *
 * @param {String} string
 * @return {Object}
 * @private
 */
function decode(string) {
    var body = Buffer.from(string, 'base64').toString('utf8');
    return JSON.parse(body);
}
/**
 * Encode an object into a base64-encoded JSON string.
 *
 * @param {Object} body
 * @return {String}
 * @private
 */
function encode(body) {
    var str = JSON.stringify(body);
    return Buffer.from(str).toString('base64');
}
/**
 * Try getting a session from a cookie.
 * @private
 */
function tryGetSession(cookies, name, opts) {
    var str = cookies.get(name, opts);
    if (!str) {
        return undefined;
    }
    try {
        return Session.deserialize(str);
    }
    catch (err) {
        return undefined;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2Vzc2lvbi9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFYjs7O0dBR0c7QUFDSCxJQUFJLE9BQU8sR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDcEMsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFBO0FBS2pDOzs7R0FHRztBQUVILE1BQU0sQ0FBQyxPQUFPLEdBQUcsYUFBYSxDQUFDO0FBRS9COzs7Ozs7Ozs7Ozs7R0FZRztBQUNILElBQUksU0FBUyxDQUFDO0FBQ2QsU0FBUyxhQUFhLENBQUMsT0FBTztJQUM1QixJQUFJLElBQUksR0FBRyxPQUFPLElBQUksRUFBRSxDQUFDO0lBRXpCLGNBQWM7SUFDZCxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxJQUFJLFNBQVMsQ0FBQztJQUNsQyxJQUFJLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3ZCLFVBQVU7SUFDVixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3JCLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLE1BQU07UUFBRSxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFL0MsV0FBVztJQUNYLElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJO1FBQUUsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7SUFDbEQsSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUk7UUFBRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztJQUNoRCxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSTtRQUFFLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0lBRTVDLElBQUksQ0FBQyxJ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